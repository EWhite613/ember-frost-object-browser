$frost-action-bar-box-shadow-color: rgba(0, 0, 0, 0.2);
$frost-action-bar-background-color: rgba($frost-color-white, 0.85);
$frost-action-bar-loading-dimension: 35px;
$frost-action-bar-loading-text-margin: calc(#{$frost-action-bar-loading-dimension} - #{$frost-font-s});
$frost-input-select-option-row-height: 35px;

@mixin triangle-up($color, $size) {
  width: 25px;
  height: 0;
  border-right: $size solid transparent;
  border-bottom: $size solid $color;
  border-left: $size solid transparent;
}

.frost-action-bar {
  display: flex;
  position: relative;
  left: 1px;
  flex-direction: row;
  justify-content: space-between;
  width: calc(100% - 2px);
  height: $frost-action-bar-height;
  padding: 10px;
  background-color: $frost-action-bar-background-color;
  box-shadow: 0 -2px 8px $frost-action-bar-box-shadow-color;
  z-index: 1;

  &-selections {
    align-self: center;
    color: $frost-color-grey-3;
    font-size: $frost-font-s;
  }

  &-loading {
    display: flex;
    flex-direction: row;

    .frost-loading {
      width: $frost-action-bar-loading-dimension;
      height: $frost-action-bar-loading-dimension;
      margin: 0 15px;
    }


    .loading-text {
      margin-top: calc(#{$frost-action-bar-loading-text-margin} / 2);
      color: $frost-color-blue-1;
      font-size: $frost-font-s;
    }

  }

  &-buttons {
    display: flex;
  }

  &-buttons > * {
    margin-left: 15px;
  }


  .more-actions-popover {
    z-index: 10;

    ul {
      margin: 0;
      padding: 0;

      li {
        width: 100%;
        min-height: 0;
        padding: 0 5px;
        color: $frost-color-blue-1;
        line-height: $frost-input-select-option-row-height;
        list-style: none;
        text-overflow: ellipsis;
        white-space: nowrap;
        cursor: pointer;

        &.disabled {
          opacity: .25;
          // In Firefox, the click on the app bar was not detected - added this to enable it.
          // From https://developer.mozilla.org/en/docs/Web/CSS/pointer-events
          //     The CSS property pointer-events allows authors to control under what circumstances (if any)
          //     a particular graphic element can become the target of mouse events.
          //     none: The element is never the target of mouse events; however, mouse events may target
          //            its descendant elements if those descendants have pointer-events set to some other value.
          //            In these circumstances, mouse events will trigger event listeners on this parent element
          //            as appropriate on their way to/from the descendant during the event capture/bubble phases.
          pointer-events: none;
        }

        &:hover {
          background: transparentize($frost-selection, .92);
        }

        & > *,
        & > *:hover,
        & > *:active,
        & > *:focus {
          height: $frost-input-select-option-row-height;
          margin: 0;
          padding: 0;
          border: 0;
          border-bottom: solid 1px $frost-color-lgrey-3;
          background: none !important; // sass-lint:disable-line no-important
          color: $frost-color-blue-1;
          box-shadow: none !important; // sass-lint:disable-line no-important
        }
      }
    }

    .tooltip-frost-popover {
      .frost-button {
        margin-left: 0;
      }
    }

    .up-arrow {
      @include triangle-up($frost-select-container-background, 12px);
      display: inline-block;
      position: absolute;
      top: -10px;
      right: 23px;
      overflow: visible;
      z-index: 3;
      pointer-events: none;
    }
  }
}
